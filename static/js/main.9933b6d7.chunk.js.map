{"version":3,"sources":["hooks/useAxios.js","components/DayList.js","components/Header.js","components/Word.js","components/Day.js","components/EmptyPage.js","components/CreateWord.js","components/CreateDay.js","App.js","index.js"],"names":["useAxios","url","useState","data","setData","useEffect","a","axios","get","getData","DayList","days","className","map","day","to","id","Header","Word","w","word","setWord","isShow","setIsShow","isDone","setIsDone","type","checked","onChange","method","headers","then","res","statusText","eng","kor","onClick","window","confirm","Day","useParams","words","EmptyPage","CreateWord","history","useHistory","dayRef","useRef","engRef","korRef","ref","value","placeholder","e","preventDefault","current","alert","push","CreateDay","length","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9933b6d7.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction useAxios(url) {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            const data = await axios.get(url);\r\n            setData(data.data);\r\n        }\r\n\r\n        getData();\r\n    }, [url]);\r\n    \r\n    return data;\r\n}\r\n    \r\nexport default useAxios;","import { Link } from 'react-router-dom';\r\nimport './DayList.css';\r\nimport useAxios from '../hooks/useAxios';\r\n\r\nfunction DayList() {\r\n    const days = useAxios(\"http://localhost:3001/days\");\r\n \r\n    return(\r\n        <ul className=\"DayList\">\r\n            {days.map(day => (\r\n                <li key={day.id}>\r\n                    <Link to={`/day/${day.day}`}>Day { day.day }</Link>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\nexport default DayList;","import './Header.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return(\r\n        <div className=\"Header\">\r\n            <h1 className=\"title\">\r\n                <Link to='/'>토익 VOCA</Link>\r\n            </h1>\r\n            <div className=\"add_btn\">\r\n                <Link to='/create_word'>단어 추가</Link>\r\n                <Link to='/create_day'>Day 추가</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import './Word.css';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Word({ word: w }) {\r\n    const [word, setWord] = useState(w);\r\n    const [isShow, setIsShow] = useState(false);\r\n    const [isDone, setIsDone] = useState(word.isDone);\r\n\r\n    const toggleShow = () => {\r\n        setIsShow(!isShow);\r\n    }\r\n\r\n    const toggleDone = () => {\r\n        axios(`http://localhost:3001/words/${word.id}`,\r\n        {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            data: {\r\n                ...word,\r\n                isDone: !isDone,\r\n            }\r\n        }).then(res => {\r\n            if (res.statusText === \"OK\") {\r\n                setIsDone(!isDone);\r\n            }\r\n        });\r\n    }\r\n\r\n    const toggleDel = () => {\r\n        if(window.confirm('삭제 하시겠습니까?')) {\r\n            axios(`http://localhost:3001/words/${word.id}`,\r\n            {\r\n                method: \"DELETE\",\r\n            }).then(res => {\r\n                if (res.statusText === \"OK\") {\r\n                    setWord({ id: 0 });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    if (word.id === 0) {\r\n        return null;\r\n    }\r\n\r\n    return(\r\n        <tr key={word.id} className={isDone ? \"off\" : \"\"}>\r\n            <td>\r\n                <input type=\"checkbox\" checked={isDone} onChange={toggleDone}></input>\r\n            </td>\r\n            <td>{word.eng}</td>\r\n            <td>{isShow && word.kor}</td>\r\n            <td>\r\n                <button onClick={toggleShow} className=\"show_btn\">\r\n                    뜻 {isShow ? \"숨기기\" : \"보기\"}\r\n                </button>\r\n                <button onClick={toggleDel} className=\"del_btn\">삭제</button>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\nexport default Word;","import Word from './Word';\r\nimport { useParams } from \"react-router-dom\";\r\nimport './Day.css';\r\nimport useAxios from '../hooks/useAxios';\r\n\r\nfunction Day() {\r\n    const { day } = useParams();\r\n    const words = useAxios(`http://localhost:3001/words?day=${day}`);\r\n\r\n    return(\r\n        <div className=\"Day\">\r\n            <h2>Day {day}</h2>\r\n            <table>\r\n                <tbody>\r\n                    {words.map(word => (\r\n                        <Word word={word} key={word.id}/>\r\n                    ))}     \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\nexport default Day;","import { Link } from 'react-router-dom';\r\n\r\nfunction EmptyPage() {\r\n    return (\r\n      <div className=\"EmptyPage\">\r\n          <h2>잘못된 접근입니다.</h2>\r\n          <Link to='/'>돌아가기</Link>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default EmptyPage;","import axios from 'axios';\r\nimport { useRef } from 'react';\r\nimport useAxios from '../hooks/useAxios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"./CreateWord.css\"\r\n\r\nfunction CreateWord() {\r\n    const days = useAxios(\"http://localhost:3001/days\");\r\n    const history = useHistory();\r\n\r\n    const dayRef = useRef(null);\r\n    const engRef = useRef(null);\r\n    const korRef = useRef(null);\r\n\r\n    const saveWord = (e) => {\r\n        e.preventDefault();\r\n\r\n        axios(`http://localhost:3001/words`,\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            data: {\r\n                day: dayRef.current.value,\r\n                eng: engRef.current.value,\r\n                kor: korRef.current.value,\r\n                isDone: false \r\n            }\r\n        }).then(res => {\r\n            if (res.statusText === \"Created\") {\r\n                alert('생성이 완료되었습니다.');\r\n                history.push(`/day/${dayRef.current.value}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"CreateWord\">\r\n            <div className=\"input_area\">\r\n                <label>Day</label>\r\n                <select ref={dayRef}>\r\n                    {days.map(day => (\r\n                        <option key={day.id} value={day.day}>{day.day}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"input_area\">\r\n                <label>Eng</label>\r\n                <input type=\"text\" placeholder=\"computer\" ref={engRef}></input>\r\n            </div>\r\n            \r\n            <div className=\"input_area\">\r\n                <label>Kor</label>\r\n                <input type=\"text\" placeholder=\"컴퓨터\" ref={korRef}></input>\r\n            </div>\r\n        \r\n            <button onClick={saveWord}>저장</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateWord;","import axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useAxios from \"../hooks/useAxios\";\r\nimport \"./CreateDay.css\"\r\n\r\nfunction CreateDay() {\r\n    const days = useAxios(\"http://localhost:3001/days\");\r\n    const history = useHistory();\r\n\r\n    const saveDay = (e) => {\r\n        e.preventDefault();\r\n\r\n        axios(`http://localhost:3001/days`,\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            data: {\r\n                day: days.length + 1\r\n            }\r\n        }).then(res => {\r\n            if (res.statusText === \"Created\") {\r\n                alert('생성이 완료되었습니다.');\r\n                history.push(`/`);\r\n            }\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"CreateDay\">\r\n            <h3>현재 일 수 : {days.length}일</h3>\r\n            <button onClick={saveDay}>Day 추가</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateDay;","import './App.css';\nimport DayList from './components/DayList';\nimport Header from './components/Header';\nimport Day from './components/Day';\nimport EmptyPage from './components/EmptyPage';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\nimport CreateWord from './components/CreateWord';\nimport CreateDay from './components/CreateDay';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={ DayList } />\n          <Route path='/day/:day' component={ Day } />\n          <Route path='/create_word' component={ CreateWord } />\n          <Route path='/create_day' component={ CreateDay } />\n          <Route component={ EmptyPage } />\n        </Switch>\n      </BrowserRouter>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}